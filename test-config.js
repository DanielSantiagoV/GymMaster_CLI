const ConfigCLI = require('./cli/ConfigCLI');
const DatabaseConfig = require('./config/database');

async function testConfigFunctions() {
    try {
        console.log('üß™ PROBANDO FUNCIONES ESPEC√çFICAS DE CONFIGURACI√ìN');
        console.log('================================================\n');
        
        // Conectar a la base de datos
        console.log('1Ô∏è‚É£ Conectando a base de datos...');
        const dbConfig = new DatabaseConfig();
        const connection = await dbConfig.connect();
        console.log('‚úÖ Conexi√≥n a base de datos establecida');
        
        // Crear instancia de ConfigCLI
        console.log('\n2Ô∏è‚É£ Creando instancia de ConfigCLI...');
        const configCLI = new ConfigCLI(connection.db);
        console.log('‚úÖ ConfigCLI instanciado');
        
        // Probar funci√≥n de estado del sistema
        console.log('\n3Ô∏è‚É£ Probando verEstadoSistema()...');
        await configCLI.verEstadoSistema();
        
        // Probar funci√≥n de estado de conexi√≥n
        console.log('\n4Ô∏è‚É£ Probando verEstadoConexion()...');
        await configCLI.verEstadoConexion();
        
        // Probar funci√≥n de listar √≠ndices
        console.log('\n5Ô∏è‚É£ Probando listarIndices()...');
        await configCLI.listarIndices();
        
        // Probar funci√≥n de ver variables de entorno
        console.log('\n6Ô∏è‚É£ Probando verVariablesEntorno()...');
        await configCLI.verVariablesEntorno();
        
        console.log('\nüéâ TODAS LAS FUNCIONES FUNCIONAN CORRECTAMENTE');
        
    } catch (error) {
        console.log('‚ùå Error:', error.message);
        console.log('Stack:', error.stack);
    }
}

testConfigFunctions();


